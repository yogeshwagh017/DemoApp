pool:
  vmImage: 'macOS 10.13'

    
steps:
- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: '$(P12FileName)'
    certPwd: '$(P12Password)'
    keychain: 'temp'
#- task: InstallAppleCertificate@2
# inputs:
#    certSecureFile: '$(P12FileName)'# The 'P12FileName' variable is set in the Azure pipelines pipeline editor and marked 'secret' to be encrypted
#    certPwd: '$(P12Password)' # The 'P12Password' variable is set in the Azure pipelines pipeline editor and marked 'secret' to be encrypted
#    keychain: 'temp'

- task: InstallAppleProvisionProfile@1
 inputs:
    provisioningProfileLocation:'secureFiles'
    provProfileSecureFile:'$(provProfileSecureFileName)'# The 'provProfileSecureFileName' variable is set in the Azure pipelines pipeline editor and marked 'secret' to be encrypted
    removeProfile:true

- task: Xcode@5
  displayName: 'Build the app using Xcode'
  inputs:
    actions: 'build'#'clean build analyze archive'
    sdk: 'iphoneos'
    scheme: 'DemoApp'
    configuration: 'Release'
    xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace'
    xcodeVersion: 'default'
    packageApp: true
    signingOption: 'manual'
    signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
    provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'
    exportPath: '$(agent.buildDirectory)/output/$(sdk)/$(configuration)'
    useXcpretty: 'false'
    #args: '-archivePath $(agent.buildDirectory)/DemoApp'
    
- task: CopyFiles@2
inputs:
    contents: '**/*.ipa'
    targetFolder: '$(build.artifactStagingDirectory)'
    overWrite: true
    
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(build.artifactStagingDirectory)/output/$(sdk)/$(configuration)'
    artifactName: 'drop'
    artifactType: 'Container'
